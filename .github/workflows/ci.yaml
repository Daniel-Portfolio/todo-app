name: CI
on:
  push:
    branches:
        - main
jobs:
    unit-tests:
      runs-on: ubuntu-latest
      steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Set up Python
            uses: actions/setup-python@v5
            with:
              python-version: '3.12'

          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt

          - name: Cache dependencies
            uses: actions/cache@v4
            with:
                path: ~/.cache/pip
                key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
                restore-keys: |
                    ${{ runner.os }}-pip-

          - name: Run tests
            run: pytest testing/*

          - name: Start services
            run: docker-compose up -d

          - name: Run e2e tests
            run: ./e2e_tests.sh
            
    publish:
      runs-on: ubuntu-latest  
      needs: unit-tests
      steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v2
            
          - name: Configure AWS credentials
            uses: aws-actions/configure-aws-credentials@v2 # More information on this action can be found below in the 'AWS Credentials' section
            with:
              # role-to-assume: arn:aws:iam::123456789012:role/my-github-actions-role
              aws-region: ap-south-1
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

          - name: Login to Amazon ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v1
            with:
             mask-password: 'true'

          - name: Build, tag, and push to ECR
            env:
              ECR_REGISTRY:  ${{ steps.login-ecr.outputs.registry }}
              ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
              IMAGE_TAG: latest
            run: |
              docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
              docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG