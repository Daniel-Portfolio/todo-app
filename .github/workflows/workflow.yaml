name: CI
on:
  push:
    branches:
      - main
    tags:
      - '*.*.*'
  pull_request:
    branches:
      - main
jobs:
    test:
      runs-on: ubuntu-latest
      if: github.event_name == 'pull_request'
      steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Set up Python
            uses: actions/setup-python@v5
            with:
              python-version: '3.12'
              cache: 'pip'
          - run: pip install -r requirements.txt

          - name: Run tests
            run: pytest testing/*

          - name: Run e2e tests
            run: |
              docker-compose up -d
              echo "Waiting for the service to be ready..."
              sleep 10
              ./e2e_tests.sh
    publish:
      if: github.event_name == 'push'
      runs-on: ubuntu-latest  
      outputs:
        tag: ${{ steps.version.outputs.TAG }}
      steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Get version from commit tag
            id: version
            run: |
              if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
                echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
              else
                echo "TAG=latest" >> $GITHUB_OUTPUT
              fi

          - name: Configure AWS credentials
            uses: aws-actions/configure-aws-credentials@v2
            with:
              aws-region: ap-south-1
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

          - name: Login to Amazon ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v1
            with:
             mask-password: 'true'

          - name: Build, tag, and push to ECR
            env:
              ECR_REGISTRY:  ${{ steps.login-ecr.outputs.registry }}
              ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
              IMAGE_TAG: ${{ steps.version.outputs.TAG }}
            run: |
              docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
              docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    deploy:
      if: github.ref_type == 'tag'
      runs-on: ubuntu-latest
      needs: publish  
      steps:
          - name: Checkout repository
            uses: actions/checkout@v4
            with:
              repository: 'Daniel-Portfolio/gitops'
              token: ${{ secrets.GH_TOKEN }}
          
          - name: update Charts.yaml
            shell: bash
            run: |
              sed -i 's/appVersion:.*/appVersion: "${{ needs.publish.outputs.tag }}"/g' ./charts/todo-app/Chart.yaml
          
          - name: Commit changes
            env:
              GH_TOKEN: ${{ secrets.GH_TOKEN }}
            run: |
              git config --global user.email "danirdd92@gmail.com"
              git config --global user.name "Daniel-Portfolio"
              git commit -am "bump appVersion in Chart.yaml to ${{ needs.publish.outputs.tag }}"
              git push